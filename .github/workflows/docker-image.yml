name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Automated Version Bump
      if: steps.changed-files-specific.outputs.any_changed == 'true'
      id: version-bump
      uses: 'phips28/gh-action-bump-version@master'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        skip-tag:  'true'
        commit-message: 'CI: Bump Image version to {{version}}'

    - name: Output Step
      if: steps.changed-files-specific.outputs.any_changed == 'true'
      env:
        NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
      run: echo "new tag $NEW_TAG"

    - name: Branch name
      run: echo running on branch ${GITHUB_REF##*/}

    - name: Log into registry ${{ env.REGISTRY }}
      if: steps.changed-files-specific.outputs.any_changed == 'true'
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      if: steps.changed-files-specific.outputs.any_changed == 'true'
      uses: docker/build-push-action@v2
      with:
        context: ./docker
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.IMAGE_NAME }}:latest, ${{ env.IMAGE_NAME }}:${{ steps.version-bump.outputs.newTag }}

    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag python-docker:${GITHUB_REF##*/}-v2 --build-arg ${GITHUB_SHA} --build-arg ${GITHUB_REF##*/}
    
    # - name: Tag Image
    #   run: docker tag python-docker:${GITHUB_REF##*/}-v2 franksword/python-docker:${GITHUB_REF##*/}-v2
    
    # - name: Login to DockerHub
    #   run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    
    # - name: Push to DockerHub
    #   run: docker push franksword/python-docker:${GITHUB_REF##*/}-v2